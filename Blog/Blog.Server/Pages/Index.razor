@page "/"

<PageTitle>Homepage</PageTitle>

<MudContainer MaxWidth="MaxWidth.ExtraSmall" Style="@($"padding-top:10%;padding-button:10%;")">

    <MudText Typo="Typo.h5" Align="Align.Center" Style="@($"color:#36454F;")">
            Hello,
            @if (!string.IsNullOrEmpty(UserName))
            {
            <b Style="@($"color:#8A9A5B;")">@UserName</b>
            }
            else
            {
            <b Style="@($"color:#8A9A5B;")">Guest</b>
            }
            <br />Welcome to
        <MudButton Variant="Variant.Outlined" Style="@($"color:#E5E4E2;background-color:#7393B3;font-size:1.25rem")" href="@($"/blogs")">blogs</MudButton>
        </MudText>
   
</MudContainer>


@code {

    [CascadingParameter]
    private Task<AuthenticationState>? AuthStateTask { get; set; }

    private string? UserName { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var state = await GetAuthState();
            if (state?.User?.Identities?.First().Claims.Any() == true)
            {
                UserName = state.User.Identities.First().Claims.ElementAt(2).Value;
                StateHasChanged();
            }
        }
    }

    private async Task<AuthenticationState> GetAuthState()
    {
        var authState = await AuthStateTask;
        return authState;
    }
}







