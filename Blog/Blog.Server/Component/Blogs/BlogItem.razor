@using Blog.Common.Model.Dto
@using Microsoft.AspNetCore.Components

<div class="container p-3 my-3 border rounded bg-light">
    <div class="row align-items-center">
        <div class="col-sm-1">
            <a class="" href="@($"/posts/{BlogDto.BlogID}")"><img src="/images/blog.png" class="img-fluid" alt="Blog" /></a>
        </div>
        <div class="col-sm-6">
            <div>
                <h6>
                    <a style="color:#ff4da6" href="@($"/posts/{BlogDto.BlogID}")">@BlogDto.BlogTitle</a>
                </h6>
            </div>
            <div>
                @BlogDto.BlogDetails
            </div>
        </div>
        <div class="col-sm-1">
            @BlogDto.BlogStatus
        </div>
        <div class="col-sm-2">
            @if (IsSubscribed(BlogDto.BlogID))
            {
                <MudButton Variant="Variant.Text" Disabled="true" Style="@($"color:#36454F;text-transform:uppercase;")">Subscribed</MudButton>
            }
            else
            {
                <AuthorizeView>
                    <Authorized>
                        <MudButton Variant="Variant.Filled" Style="@($"color:white;background-color:#ff4da6;")" @onclick=SubscribeBlog>Subscribe</MudButton>
                    </Authorized>
                </AuthorizeView>
            }
        </div>
            <div class="col-sm-2">
            <MudButton Variant="Variant.Filled" Style="@($"color:white;background-color:#024364;")" href="@($"/posts/{BlogDto.BlogID}")">posts</MudButton>
            </div>
        </div>
     
</div>

@code {
    [Parameter]
    public BlogDto BlogDto { get; set; }

    [Parameter]
    public IEnumerable<BlogDto> SubscribedBlogs { get; set; }

    [Parameter]
    public EventCallback<BlogDto> OnSubscribeCalled { get; set; }

    private async Task SubscribeBlog()
    {
        await OnSubscribeCalled.InvokeAsync(BlogDto);
    }

    private bool IsSubscribed(int blogId)
    {
        return SubscribedBlogs?.Any(b => b.BlogID == blogId) ?? false;
    }
}
