@using Blog.Common.Model.ViewModel
@using Microsoft.AspNetCore.Components


<EditForm Model="@Model" OnValidSubmit="CreateComment" Style="@($"padding-top:0px;padding-bottom:50px;")">
    <DataAnnotationsValidator />
    <div class="row">
        <div class="col-lg-2">
            <div class="py-2">
                <InputText @bind-Value="Model.CommentTitle" placeholder="Title" class="form-control mb-2" />
                <ValidationMessage For="(() => Model.CommentTitle)"></ValidationMessage>
            </div>
        </div>
        <div class="col-lg-10">
            <div class="py-2">
                <InputText @bind-Value="Model.CommentDetails" placeholder="Details" class="form-control mb-2" />
                <ValidationMessage For="(() => Model.CommentDetails)"></ValidationMessage>
            </div>
        </div>
    </div>
    
    <div class="row">
        <div class="col-lg-12 padding:5px margin:10px">
            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" FullWidth="false" StartIcon="@Icons.Material.Filled.AddCircle" Style="@($"color:#E5E4E2;background-color:#8A9A5B;")">Create</MudButton>
        </div>
    </div>
</EditForm>


@code {
    [Parameter]
    public EventCallback<CommentCreateModel> OnCommentCreated { get; set; }

    public CommentCreateModel Model { get; set; } = new();

    private async Task CreateComment()
    {
        await OnCommentCreated.InvokeAsync(Model);

        await ResetForm();
    }

    private async Task ResetForm()
    {
        Model = new CommentCreateModel();
    }

}
